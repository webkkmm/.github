create forms.py in newapp forms.py

from django import forms

from django.contrib.auth.models import User from import models

class RegisterForm(forms. ModelForm): class Meta: model-User fields=['username','email', 'password','first_name', 'last_name'] widgets={ 'password': forms.PasswordInput(), 'email':forms Email Input() }

models.py

from django.db import models

class posts(models. Model):

title-models.CharField(max_length=20) content=models.CharField(max_length=40)

newapp-urls.py

from django.urls import path

from.import views urlpatterns [path(", views.index,name="index"), path('dashboard/', views.dashboard,name="dashboard"), path('addpost', views.addpost,name="addpost"), path('listall/',views.viewall,name="listall"), path('viewone/",views.viewone,name="viewone"), path('deleteone/", views.deleteone, name="deleteone"), 1

views.py

from django.shortcuts import render,redirect

from forms import *

from models import *

from django.contrib import messages from django.contrib.auth import authenticate, login from django.conf import settings

from django.core.mail import send_mail

def index(request):

return(render(request, 'index.html'))

def dashboard(request): return(render(request,'dashboard.html'))def viewone(request):

if request method-POST:

t-request.POST['title']

cr-posts.objects.filter(title-t)

return render(request, listall.html', 'cr':cr})

else:

return render(request,'viewone.html')

def deleteone(request):

if request.method="POST":

t-request.POST['title']

cr-posts.objects.filter(title-t)

cr.delete

return render(request, 'deleteone.html')

else:

return render(request, 'deleteone.html')

def addpost(request):

if request.method = 'POST':

post-posts()

post.title= request.POST['title']

post.content= request.POST['content']

post.save()

return render(request, 'addpost.html')

else:

return render(request, 'addpost.html')

def viewall(request).

cr-posts.objects.all().order_by('-title')

#select * from posts order by title

return render(request, 'listall.html', {'cr' cr})

def viewone (request):

if request method='POST'

t-request POST['title']

cr-posts.objects.filter(title-t)

return render(request, 'listall html', {'cr':cr})

else:

return render(request, 'viewone.html')

def listall(request):

cr-posts.objects.all().order_by('title')

return render(request, 'listall.html', ('cr':cr})
